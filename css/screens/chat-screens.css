.chat-screen {
    background-color: white;
    height: 500vh;
    width: auto;
    background-size: cover;

}

.chat-screen .alt-header,
.chat-screen .status-bar {
    top: 0px;
    position: fixed;
    width: 100%;
    background-color: white;
    box-sizing: border-box;
}

.chat-screen .status-bar {
    z-index: 2;
}

.chat-screen .alt-header {
    z-index: 1;
}

.fa-bars {
    margin-left: 20px;
    padding-right: 8px;

}
@keyframes fadeIn {
    from {
        transform: translateY(10px);
        opacity: 0;
    }
    to {
        transform: none;
        opacity: 1;
    }
}

.main-chat {
    margin-top: 190px;
    display: flex;
    flex-direction: column; /* flex-direction이 column일 때 cross axis(교차축)은  수평이 된다.*/
    align-items: center;
    animation: fadeIn 0.5s linear;
}

.chat__timestamp {
    color: white;
    background-color:#cdd6db;
    padding: 15px;
    border-radius: 25px;
    font-size: 14px;
    margin-bottom: 25px;
}

.message-row {
    width: 100%;
    display: flex;
    margin-bottom: 25px;
}

.message-row img {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    margin-right: 15px;
}

.message__author {
    margin-bottom: 5px;
    display: block; /* span이기 때문에 */
}

.message__bubble {
    background-color: black;
    padding: 13px;
    color: white;
    border-radius: 15px;
    border-top-left-radius: 0px; /* 모서리 각 */
    margin-right: 5px;
    font-size: 18px;
}

.message__info {
    display: flex;
    align-items: flex-end; /* bubble과 time에 적용시켜 시간 떨어 뜨리기 */

}

.message__time,
.message__author  {
    opacity: 0.8;
    font-size: 13px;
}

.message-row--own {
    justify-content: flex-end; /* message-row가 flex이기에 이렇게 써줌. */

}

.message-row--own .message__bubble {
    background-color: crimson;
    border-top-right-radius: 0px;
    border-top-left-radius: 15px;
    margin-right: 0px;
    margin-left: 5px;
}

.message-row--own .message__info {
    flex-direction: row-reverse; /* 방법 2 ,, */
}

/* order: 1;  부모가 flex container일 때,,, 순서를 바꿔주는 방법 1
.message-row-own .message__bubble {
    order: 1;
}
.message-row--own .message__time {
    order: 0; 

}
*/

.reply {
    position: fixed;
    bottom: 0;
    width: 100%;
    background-color: rgb(101, 99, 99);
    display: flex;
    justify-content: space-between;
    padding: 5px 25px;
    box-sizing: border-box;
    align-items: center;
    transition: all 0.3s ease-in-out;
}

.reply i {
    opacity: 0.5;
}

.reply .reply__column:first-child {
    width: 10%;
}

.reply .reply__column:last-child {
    width: 90%;
    position: relative;
}

.reply input {
    padding: 14px;
    width: 96%;
    border: var(--main-border);
    border-radius: 20px;
    transition: all 0.3s ease-in-out; /* 변화를 부드럽게 관찰하기 위한 */
}

.reply__column:last-child > i,
.reply__column:last-child button {
    position: absolute;
    right: 3px;
    top: 3px;
}

.reply__column:last-child > i {
    right: 50px;
    top: 15px;
}

.reply__column button {
    background-color: rgb(101, 99, 99);
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
}
.reply__column button i {
    opacity: 1;
}

.reply__column button :focus,
.reply__column button :active {
    outline: none;

}

.reply .reply__column:first-child,
.reply .fa-smile,
.reply button {
    transition: 0.3s ease-in-out;
}

.reply:focus-within /* 여기서는 reply 내부에 어떤 element가 focus되면 */ .reply__column:first-child,
.reply:focus-within .fa-smile,
.reply:focus-within button {
    opacity: 0;
}

.reply:focus-within input {
    width: 95vw;
    transform: translateX(-11.5%) translateY(-80px);
    border: 1px solid rgb(66, 66, 66);
}

.reply:focus-within {
    transform: translateY(80px);
}